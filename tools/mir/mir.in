#!/bin/bash -ex
# Build Mirage applications

shopt -s nullglob

OCAMLDSORT=${OCAMLDSORT:-miragedsort.opt}
OCAMLOPT=${OCAMLOPT:-ocamlopt.opt}
OCAMLOPT_FLAGS="@OCAMLOPT_FLAGS@"
OCAMLDEP=${OCAMLDEP:-ocamldep.opt}
MAKE=${MAKE:-make}
CC=${CC:-cc}

MODE=bu

if [ ! -z "$1" ]; then
  MODE="$1"
  shift
fi

if [ -z "$1" ]; then
  DIR="."
else
  DIR="$1"
fi

# no readlink -f on MacOS X, so use perl instead for that
if readlink -f . >/dev/null 2>&1; then
  DIR=`readlink -f ${DIR}`
else
  DIR=`perl -e "use Cwd 'abs_path'; print abs_path(\"$1\")"`
fi

function usage {
  echo "Usage: $0 [mode] [dir]"
  echo "  [mode] can be:"
  echo "    bu : target @OS@ (default)"
  echo "    bx : target Xen"
  echo "    clean : clean intermediates"
  exit 1
}

case "${MODE}" in
bu)
  echo Building for @OS@
  TARG=u
  MIRAGE_ROOT=@PREFIX@/lib/ocaml/mirage
  ;;
bx)
  echo Building for Xen
  TARG=x
  MIRAGE_ROOT=@PREFIX@/lib/ocaml/mirage
  ;;
dx)
  echo Building for Xen in-tree
  TARG=x
  MIRAGE_ROOT=`pwd`
  ;;
clean|cl)
  echo Cleaning intermediate files
  cd "${DIR}"
  rm -f *.cmi *.cma *.cmo *.cmx *.annot *.o app .depend
  exit 0
  ;;
*)
  echo Unknown mode $*
  usage
  ;;
esac

SYNTAX=${MIRAGE_ROOT}/syntax
STDLIB=${MIRAGE_ROOT}/lib/stdlib
LIBDIR=${MIRAGE_ROOT}/lib
cd "${DIR}"
DEPEND=".depend"
${OCAMLDSORT} -pp "camlp4o -I ${SYNTAX} pa_mirage.cma" -nox -mli *.ml *.mli > ${DEPEND}

# now link app.o depending on the target platform
case "${TARG}" in
u)
  echo Linking for @OS@
  RUNTIME=${MIRAGE_ROOT}/runtime/unix
  INCLUDES="-I ${STDLIB} -I ${LIBDIR}/lwt -I ${LIBDIR}/lib/unix -I ${LIBDIR}/lib/mpl -I ${LIBDIR}/lib/mpl"
  ${OCAMLOPT} -nostdlib -annot -pp "camlp4o -I ${SYNTAX} pa_mirage.cma" ${INCLUDES} stdlib.cmxa lwtlib.cmxa unix.cmx mpl.cmx mlnet.cmx `cat .depend` -output-obj -o app.o
  ${CC} -o app @OCAML_CLIBS@ app.o ${RUNTIME}/libmiragerun_@OS@.a
  ;;
x)
  echo Linking for Xen
  RUNTIME=${MIRAGE_ROOT}/runtime/xen
  ${OCAMLOPT} -nostdlib -annot -pp "camlp4o -I ${SYNTAX} pa_mirage.cma" -I ${STDLIB} -I ${MIRAGE_ROOT}/lib/lwt -I ${MIRAGE_ROOT}/lib/xen -I ${MIRAGE_ROOT}/lib/mpl -I ${MIRAGE_ROOT}/lib/mlnet ${OCAMLOPT_FLAGS} stdlib.cmxa lwtlib.cmxa mpl.cmx xen.cmx mlnet.cmx `cat .depend` -output-obj -o app_raw.o
objcopy --rename-section .data=.mldata --rename-section .rodata=.mlrodata --rename-section .text=.mltext app_raw.o app.o
  I=${RUNTIME}/inst-x86_64/lib
  cd ${RUNTIME}/kernel && ${MAKE} APP_LIB="${DIR}/app.o" && mv ${RUNTIME}/kernel/obj/mirage-os.gz ${DIR}/mirage-os.gz
  zcat ${DIR}/mirage-os.gz > ${DIR}/mirage-os
  ;;
*)
  echo Unknown target $TARGET
  exit 1
  ;;
esac
