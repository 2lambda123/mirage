(* Geneated by functoria_test *)

let (>>=) x f = f x
let return x = x
let run x = x

module Ethernet_make__66 = Ethernet.Make(Netif)

module Arp_make__69 = Arp.Make(Ethernet_make__66)(OS.Time)

module Mirage_crypto_rng_mirage_make__72 =
  Mirage_crypto_rng_mirage.Make(OS.Time)(Mclock)

module Static_ipv4_make__76 =
  Static_ipv4.Make(Mirage_crypto_rng_mirage_make__72)(Mclock)
  (Ethernet_make__66)(Arp_make__69)

module Mirage_crypto_rng_mirage_make__63 =
  Mirage_crypto_rng_mirage.Make(OS.Time)(Mclock)

module Icmpv4_make__78 = Icmpv4.Make(Static_ipv4_make__76)

module Udp_make__81 = Udp.Make(Static_ipv4_make__76)
  (Mirage_crypto_rng_mirage_make__63)

module Tcp_flow_make__86 = Tcp.Flow.Make(Static_ipv4_make__76)(OS.Time)
  (Mclock)(Mirage_crypto_rng_mirage_make__63)

module Tcpip_stack_direct_make__87 = Tcpip_stack_direct.Make(OS.Time)
  (Mirage_crypto_rng_mirage_make__63)(Netif)(Ethernet_make__66)(Arp_make__69)
  (Static_ipv4_make__76)(Icmpv4_make__78)(Udp_make__81)(Tcp_flow_make__86)

module Conduit_mirage_with_tcp__88 =
  Conduit_mirage.With_tcp(Tcpip_stack_direct_make__87)

module App_make__90 = App.Make(Conduit_mirage)
  (Mirage_crypto_rng_mirage_make__72)

let netif__12 = lazy (
  Netif.connect (Key_gen.interface ())
  )

let os_time__5 = lazy (
  return ()
  )

let ethernet_make__66 = lazy (
  let __netif__12 = Lazy.force netif__12 in
  __netif__12 >>= fun _netif__12 ->
  Ethernet_make__66.connect _netif__12
  )

let mclock__9 = lazy (
  return ()
  )

let arp_make__69 = lazy (
  let __ethernet_make__66 = Lazy.force ethernet_make__66 in
  let __os_time__5 = Lazy.force os_time__5 in
  __ethernet_make__66 >>= fun _ethernet_make__66 ->
  __os_time__5 >>= fun _os_time__5 ->
  Arp_make__69.connect _ethernet_make__66
  )

let mirage_crypto_rng_mirage_make__72 = lazy (
  let __os_time__5 = Lazy.force os_time__5 in
  let __mclock__9 = Lazy.force mclock__9 in
  __os_time__5 >>= fun _os_time__5 ->
  __mclock__9 >>= fun _mclock__9 ->
  Mirage_crypto_rng_mirage_make__72.initialize (module Mirage_crypto_rng.Fortuna)
  )

let static_ipv4_make__76 = lazy (
  let __mirage_crypto_rng_mirage_make__72 =
                                           Lazy.force mirage_crypto_rng_mirage_make__72 in
  let __mclock__9 = Lazy.force mclock__9 in
  let __ethernet_make__66 = Lazy.force ethernet_make__66 in
  let __arp_make__69 = Lazy.force arp_make__69 in
  __mirage_crypto_rng_mirage_make__72 >>= fun _mirage_crypto_rng_mirage_make__72 ->
  __mclock__9 >>= fun _mclock__9 ->
  __ethernet_make__66 >>= fun _ethernet_make__66 ->
  __arp_make__69 >>= fun _arp_make__69 ->
  Static_ipv4_make__76.connect  ~cidr:(Key_gen.ipv4 ())
                            ?gateway:(Key_gen.ipv4_gateway ())
                            _ethernet_make__66 _arp_make__69
  )

let mirage_crypto_rng_mirage_make__63 = lazy (
  let __os_time__5 = Lazy.force os_time__5 in
  let __mclock__9 = Lazy.force mclock__9 in
  __os_time__5 >>= fun _os_time__5 ->
  __mclock__9 >>= fun _mclock__9 ->
  Mirage_crypto_rng_mirage_make__63.initialize (module Mirage_crypto_rng.Fortuna)
  )

let icmpv4_make__78 = lazy (
  let __static_ipv4_make__76 = Lazy.force static_ipv4_make__76 in
  __static_ipv4_make__76 >>= fun _static_ipv4_make__76 ->
  Icmpv4_make__78.connect _static_ipv4_make__76
  )

let udp_make__81 = lazy (
  let __static_ipv4_make__76 = Lazy.force static_ipv4_make__76 in
  let __mirage_crypto_rng_mirage_make__63 =
                                           Lazy.force mirage_crypto_rng_mirage_make__63 in
  __static_ipv4_make__76 >>= fun _static_ipv4_make__76 ->
  __mirage_crypto_rng_mirage_make__63 >>= fun _mirage_crypto_rng_mirage_make__63 ->
  Udp_make__81.connect _static_ipv4_make__76
  )

let tcp_flow_make__86 = lazy (
  let __static_ipv4_make__76 = Lazy.force static_ipv4_make__76 in
  let __os_time__5 = Lazy.force os_time__5 in
  let __mclock__9 = Lazy.force mclock__9 in
  let __mirage_crypto_rng_mirage_make__63 =
                                           Lazy.force mirage_crypto_rng_mirage_make__63 in
  __static_ipv4_make__76 >>= fun _static_ipv4_make__76 ->
  __os_time__5 >>= fun _os_time__5 ->
  __mclock__9 >>= fun _mclock__9 ->
  __mirage_crypto_rng_mirage_make__63 >>= fun _mirage_crypto_rng_mirage_make__63 ->
  Tcp_flow_make__86.connect _static_ipv4_make__76
  )

let tcpip_stack_direct_make__87 = lazy (
  let __os_time__5 = Lazy.force os_time__5 in
  let __mirage_crypto_rng_mirage_make__63 =
                                           Lazy.force mirage_crypto_rng_mirage_make__63 in
  let __netif__12 = Lazy.force netif__12 in
  let __ethernet_make__66 = Lazy.force ethernet_make__66 in
  let __arp_make__69 = Lazy.force arp_make__69 in
  let __static_ipv4_make__76 = Lazy.force static_ipv4_make__76 in
  let __icmpv4_make__78 = Lazy.force icmpv4_make__78 in
  let __udp_make__81 = Lazy.force udp_make__81 in
  let __tcp_flow_make__86 = Lazy.force tcp_flow_make__86 in
  __os_time__5 >>= fun _os_time__5 ->
  __mirage_crypto_rng_mirage_make__63 >>= fun _mirage_crypto_rng_mirage_make__63 ->
  __netif__12 >>= fun _netif__12 ->
  __ethernet_make__66 >>= fun _ethernet_make__66 ->
  __arp_make__69 >>= fun _arp_make__69 ->
  __static_ipv4_make__76 >>= fun _static_ipv4_make__76 ->
  __icmpv4_make__78 >>= fun _icmpv4_make__78 ->
  __udp_make__81 >>= fun _udp_make__81 ->
  __tcp_flow_make__86 >>= fun _tcp_flow_make__86 ->
  Tcpip_stack_direct_make__87.connect _netif__12 _ethernet_make__66 _arp_make__69 _static_ipv4_make__76 _icmpv4_make__78 _udp_make__81 _tcp_flow_make__86
  )

let conduit_mirage__2 = lazy (
  Lwt.return Conduit_mirage.with_tls
  )

let conduit_mirage_with_tcp__88 = lazy (
  let __tcpip_stack_direct_make__87 = Lazy.force tcpip_stack_direct_make__87 in
  __tcpip_stack_direct_make__87 >>= fun _tcpip_stack_direct_make__87 ->
  Lwt.return (Conduit_mirage_with_tcp__88.connect _tcpip_stack_direct_make__87)

  )

let conduit_mirage__58 = lazy (
  let __conduit_mirage_with_tcp__88 = Lazy.force conduit_mirage_with_tcp__88 in
  let __conduit_mirage__2 = Lazy.force conduit_mirage__2 in
  __conduit_mirage_with_tcp__88 >>= fun _conduit_mirage_with_tcp__88 ->
  __conduit_mirage__2 >>= fun _conduit_mirage__2 ->
  Lwt.return Conduit_mirage.empty >>= _conduit_mirage_with_tcp__88 >>=
_conduit_mirage__2 >>=
fun t -> Lwt.return t
  )

let app_make__90 = lazy (
  let __conduit_mirage__58 = Lazy.force conduit_mirage__58 in
  let __mirage_crypto_rng_mirage_make__72 =
                                           Lazy.force mirage_crypto_rng_mirage_make__72 in
  __conduit_mirage__58 >>= fun _conduit_mirage__58 ->
  __mirage_crypto_rng_mirage_make__72 >>= fun _mirage_crypto_rng_mirage_make__72 ->
  App_make__90.start _conduit_mirage__58 _mirage_crypto_rng_mirage_make__72
  )

let () =
  let t =
  Lazy.force app_make__90
  in run t
