ifeq ($(WITH_SYNTAX),yes)
SYNTAX=-pp 'camlp4o -I $(ROOTDIR)/syntax pa_mirage.cma'
else
SYNTAX=
endif

STDLIB=$(ROOTDIR)/lib/std/native
STDLIB_JS=$(ROOTDIR)/lib/std/js
LWT=$(ROOTDIR)/lib/std/lwt

INCLUDES=-I $(STDLIB) -I $(LWT) $(DEPENDS:%=-I $(ROOTDIR)/lib/%)
INCLUDES_JS=-I $(STDLIB_JS) -I $(LWT) $(DEPENDS:%=-I $(ROOTDIR)/lib/%)

OCAMLOPT_ALLFLAGS=-g -nostdlib -annot $(EXTRA_FLAGS) $(INCLUDES) $(SYNTAX) $(OCAMLOPT_FLAGS)

.PRECIOUS: %.cmx
ifeq ($(USE_PACK),yes)
EXTRA_CLEAN += $(TARGET).ml

.DEFAULT: all
.PHONY: all

ALL_TARGETS=
ifneq ($(NO_NATIVE_CODE),yes)
ALL_TARGETS+=$(TARGET).cmxa
endif
ifneq ($(NO_JS_CODE),yes)
ALL_TARGETS+=$(TARGET).cmjsa
endif

all: $(ALL_TARGETS)
	@ :

$(TARGET).cmx: $(TARGET_MLI) $(TARGET).ml
	$(OCAMLOPT) -c $(OCAMLOPT_ALLFLAGS) $^

$(TARGET).cmjs: $(TARGET_MLI) $(TARGET).ml
	$(OCAMLJS) -c -nostdlib -annot $(EXTRA_FLAGS) $(INCLUDES_JS) $(SYNTAX) $^

$(TARGET).ml: $(SOURCES)
	$(OCAMLPACK) -name $(TARGET) $^ > $@

.PHONY: debug i-%
debug:
	$(OCAMLOPT) -c -nostdlib -annot $(EXTRA_FLAGS) $(INCLUDES) $(SYNTAX) $(OCAMLOPT_FLAGS) $(SOURCES)

i-%:
	$(OCAMLOPT) -i -nostdlib -annot $(EXTRA_FLAGS) $(INCLUDES) $(SYNTAX) $(OCAMLOPT_FLAGS) $(SOURCES)
else
.PHONY: all
all: $(TARGET).cmxa
	@ :
endif

.mldeps: *.ml *.mli
	$(OCAMLDSORT) $(SYNTAX) -mli *.ml *.mli > $@

.cmxdeps: .mldeps
	$(OCAMLDSORT) $(SYNTAX) -opt *.ml > $@

.cmjsdeps: .cmxdeps
	sed -e 's/\.cmx/.cmjs/g' < $< > $@

%.cmxa: %.cmx
	$(OCAMLOPT) -a -o $@ $^

%.cmjsa: %.cmjs
	$(OCAMLJS) -a -o $@ $^

.PHONY: clean
clean:
	rm -f *.cmx *.cmo *.o *.cmi *.cmxa \
	  *.cmjs *.cmjsa *.annot *.a $(EXTRA_CLEAN)
