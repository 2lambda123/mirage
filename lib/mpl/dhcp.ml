(* This file was autogenerated by MPL *)
open Mpl_stdlib
exception Bad_packet of string

type op_t = [
  |`BootRequest
  |`BootReply
  |`Unknown of int
]

let op_marshal (a:op_t) =
  match a with
  |`BootRequest -> 1
  |`BootReply -> 2
  |`Unknown x -> x

let op_unmarshal a : op_t =
  match a with
  |1 -> `BootRequest
  |2 -> `BootReply
  |x -> `Unknown x

let op_to_string (a:op_t) =
  match a with
  |`BootRequest -> "BootRequest"
  |`BootReply -> "BootReply"
  |`Unknown x -> Printf.sprintf "%d" x

let op_of_string s : op_t option = match s with
  |"BootRequest" -> Some `BootRequest
  |"BootReply" -> Some `BootReply
  |_ -> None

class o
  ~(options_length:int)
  (env:env) =
  object(self)
    method env = env_at env 0 self#sizeof
    method sizeof = options_length+4+128+64+16+4+4+4+4+1+1+2+4+1+1+1+1
    method op =
      let op = Mpl_byte.to_int (Mpl_byte.at env (0)) in
      op_unmarshal op
    method set_op v : unit =
      Mpl_byte.marshal (env_at env (0) 1) (Mpl_byte.of_int v)



    method hops =
      Mpl_byte.to_int (Mpl_byte.at env (1+1+1))
    method set_hops v : unit =
      Mpl_byte.marshal (env_at env (1+1+1) 1) (Mpl_byte.of_int v)

    method xid =
      Mpl_uint32.to_int32 (Mpl_uint32.at env (1+1+1+1))
    method set_xid v : unit =
      Mpl_uint32.marshal (env_at env (1+1+1+1) 4) (Mpl_uint32.of_int32 v)

    method secs =
      Mpl_uint16.to_int (Mpl_uint16.at env (1+1+1+1+4))
    method set_secs v : unit =
      Mpl_uint16.marshal (env_at env (1+1+1+1+4) 2) (Mpl_uint16.of_int v)


    method broadcast =
      let __bitdummy0 = Mpl_byte.to_int (Mpl_byte.at env (1+1+1+1+4+2)) in
      ((__bitdummy0 lsr 7) lsl 0)
    (* set_broadcast unsupported for now (type bit) *)



    method ciaddr =
      Mpl_uint32.to_int32 (Mpl_uint32.at env (1+1+1+1+4+2+1+1))
    method set_ciaddr v : unit =
      Mpl_uint32.marshal (env_at env (1+1+1+1+4+2+1+1) 4) (Mpl_uint32.of_int32 v)

    method yiaddr =
      Mpl_uint32.to_int32 (Mpl_uint32.at env (1+1+1+1+4+2+1+1+4))
    method set_yiaddr v : unit =
      Mpl_uint32.marshal (env_at env (1+1+1+1+4+2+1+1+4) 4) (Mpl_uint32.of_int32 v)

    method siaddr =
      Mpl_uint32.to_int32 (Mpl_uint32.at env (1+1+1+1+4+2+1+1+4+4))
    method set_siaddr v : unit =
      Mpl_uint32.marshal (env_at env (1+1+1+1+4+2+1+1+4+4) 4) (Mpl_uint32.of_int32 v)

    method giaddr =
      Mpl_uint32.to_int32 (Mpl_uint32.at env (1+1+1+1+4+2+1+1+4+4+4))
    method set_giaddr v : unit =
      Mpl_uint32.marshal (env_at env (1+1+1+1+4+2+1+1+4+4+4) 4) (Mpl_uint32.of_int32 v)

    method chaddr =
      Mpl_raw.at env (1+1+1+1+4+2+1+1+4+4+4+4) 16
    (* set_chaddr unsupported for now (type byte array) *)
    method chaddr_env : env = env_at env (1+1+1+1+4+2+1+1+4+4+4+4) 16
    method chaddr_frag = Mpl_raw.frag env (1+1+1+1+4+2+1+1+4+4+4+4) 16
    method chaddr_length = 16

    method sname =
      Mpl_raw.at env (1+1+1+1+4+2+1+1+4+4+4+4+16) 64
    (* set_sname unsupported for now (type byte array) *)
    method sname_env : env = env_at env (1+1+1+1+4+2+1+1+4+4+4+4+16) 64
    method sname_frag = Mpl_raw.frag env (1+1+1+1+4+2+1+1+4+4+4+4+16) 64
    method sname_length = 64

    method file =
      Mpl_raw.at env (1+1+1+1+4+2+1+1+4+4+4+4+16+64) 128
    (* set_file unsupported for now (type byte array) *)
    method file_env : env = env_at env (1+1+1+1+4+2+1+1+4+4+4+4+16+64) 128
    method file_frag = Mpl_raw.frag env (1+1+1+1+4+2+1+1+4+4+4+4+16+64) 128
    method file_length = 128


    method options =
      Mpl_raw.at env (1+1+1+1+4+2+1+1+4+4+4+4+16+64+128+4) options_length
    (* set_options unsupported for now (type byte array) *)
    method options_env : env = env_at env (1+1+1+1+4+2+1+1+4+4+4+4+16+64+128+4) options_length
    method options_frag = Mpl_raw.frag env (1+1+1+1+4+2+1+1+4+4+4+4+16+64+128+4) options_length
    method options_length = options_length


    method prettyprint =
      let out = prerr_endline in
      out "[ Dhcp.dhcp ]";
      out ("  op = " ^ (op_to_string self#op));
      (* htype : bound *)
      (* hlen : bound *)
      out ("  hops = " ^ (Printf.sprintf "%u" self#hops));
      out ("  xid = " ^ (Printf.sprintf "%lu" self#xid));
      out ("  secs = " ^ (Printf.sprintf "%u" self#secs));
      (* __bitdummy0 : bound *)
      out ("  broadcast = " ^ (Printf.sprintf "%u" self#broadcast));
      (* __bitdummy1 : bound *)
      (* reserved : bound *)
      out ("  ciaddr = " ^ (Printf.sprintf "%lu" self#ciaddr));
      out ("  yiaddr = " ^ (Printf.sprintf "%lu" self#yiaddr));
      out ("  siaddr = " ^ (Printf.sprintf "%lu" self#siaddr));
      out ("  giaddr = " ^ (Printf.sprintf "%lu" self#giaddr));
      out ("  chaddr = " ^ (Mpl_raw.prettyprint self#chaddr));
      out ("  sname = " ^ (Mpl_raw.prettyprint self#sname));
      out ("  file = " ^ (Mpl_raw.prettyprint self#file));
      (* cookie : bound *)
      out ("  options = " ^ (Mpl_raw.prettyprint self#options));
      ()
  end

let t
  ~op
  ?(hops=0)
  ~xid
  ~secs
  ~broadcast
  ~ciaddr
  ~yiaddr
  ~siaddr
  ~giaddr
  ~(chaddr:data)
  ~(sname:data)
  ~(file:data)
  ~(options:data)
  env =
    let ___env = env_at env (1+1+1+1+4+2+1+1+4+4+4+4) 0 in
    let chaddr___len = match chaddr with 
    |`Str x -> Mpl_raw.marshal ___env x; String.length x
    |`Sub fn -> fn ___env; curpos ___env
    |`None -> 0
    |`Frag t -> Mpl_raw.blit ___env t; curpos ___env in
    let ___env = env_at env (1+1+1+1+4+2+1+1+4+4+4+4+16) 0 in
    let sname___len = match sname with 
    |`Str x -> Mpl_raw.marshal ___env x; String.length x
    |`Sub fn -> fn ___env; curpos ___env
    |`None -> 0
    |`Frag t -> Mpl_raw.blit ___env t; curpos ___env in
    let ___env = env_at env (1+1+1+1+4+2+1+1+4+4+4+4+16+64) 0 in
    let file___len = match file with 
    |`Str x -> Mpl_raw.marshal ___env x; String.length x
    |`Sub fn -> fn ___env; curpos ___env
    |`None -> 0
    |`Frag t -> Mpl_raw.blit ___env t; curpos ___env in
    let ___env = env_at env (1+1+1+1+4+2+1+1+4+4+4+4+16+64+128+4) 0 in
    let options___len = match options with 
    |`Str x -> Mpl_raw.marshal ___env x; String.length x
    |`Sub fn -> fn ___env; curpos ___env
    |`None -> 0
    |`Frag t -> Mpl_raw.blit ___env t; curpos ___env in
    if broadcast < 0 || broadcast > 1 then raise (Bad_packet "out of range (0 < broadcast < 1)");
    let reserved = 0 in (* const bit *)
    let __bitdummy1 = Mpl_byte.of_int ((reserved land 255)) in
    let __bitdummy0 = Mpl_byte.of_int ((reserved lsr 8) + (broadcast lsl 7)) in
    let htype = (Mpl_byte.of_int 1) in (* const *)
    let hlen = (Mpl_byte.of_int 6) in (* const *)
    let cookie = (Mpl_uint32.of_int32 1669485411l) in (* const *)
    let __op = op_marshal op in
    let __op = (Mpl_byte.of_int __op) in
    let hops = (Mpl_byte.of_int hops) in
    let xid = (Mpl_uint32.of_int32 xid) in
    let secs = (Mpl_uint16.of_int secs) in
    let ciaddr = (Mpl_uint32.of_int32 ciaddr) in
    let yiaddr = (Mpl_uint32.of_int32 yiaddr) in
    let siaddr = (Mpl_uint32.of_int32 siaddr) in
    let giaddr = (Mpl_uint32.of_int32 giaddr) in
    let chaddr = chaddr in
    let sname = sname in
    let file = file in
    let options = options in
    Mpl_byte.marshal env __op;
    Mpl_byte.marshal env htype;
    Mpl_byte.marshal env hlen;
    Mpl_byte.marshal env hops;
    Mpl_uint32.marshal env xid;
    Mpl_uint16.marshal env secs;
    Mpl_byte.marshal env __bitdummy0;
    (* bit broadcast *)
    Mpl_byte.marshal env __bitdummy1;
    (* bit reserved *)
    Mpl_uint32.marshal env ciaddr;
    Mpl_uint32.marshal env yiaddr;
    Mpl_uint32.marshal env siaddr;
    Mpl_uint32.marshal env giaddr;
    skip env chaddr___len;
    skip env sname___len;
    skip env file___len;
    Mpl_uint32.marshal env cookie;
    skip env options___len;
    new o
    ~options_length:options___len
    env

let m (x:(env->o)) env = x env
let sizeof (x:o) = x#sizeof
let prettyprint (x:o) = x#prettyprint
let env (x:o) = x#env

let unmarshal 
  (env:env) : o =
  skip env 1; (* skipped op *)
  skip env 1; (* skipped htype *)
  skip env 1; (* skipped hlen *)
  skip env 1; (* skipped hops *)
  skip env 4; (* skipped xid *)
  skip env 2; (* skipped secs *)
  skip env 1; (* skipped __bitdummy0 *)
  skip env 1; (* skipped __bitdummy1 *)
  skip env 4; (* skipped ciaddr *)
  skip env 4; (* skipped yiaddr *)
  skip env 4; (* skipped siaddr *)
  skip env 4; (* skipped giaddr *)
  skip env 16; (* skipped chaddr *)
  skip env 64; (* skipped sname *)
  skip env 128; (* skipped file *)
  skip env 4; (* skipped cookie *)
  let options_length = (remaining env) in
  skip env options_length; (* skipped options *)
  new o env
  ~options_length:options_length
