#!/bin/bash -e
# Build Mirage applications

shopt -s nullglob

OCAMLDSORT=${OCAMLDSORT:-ocamldsort}
OCAMLOPT=${OCAMLOPT:-ocamlopt.opt}
OCAMLOPT_FLAGS="@OCAMLOPT_FLAGS@"
OCAMLDEP=${OCAMLDEP:-ocamldep.opt}
MAKE=${MAKE:-make}
CC=${CC:-cc}

MIRAGE_ROOT=${MIRAGE_ROOT:-`pwd`}
STDLIB=${MIRAGE_ROOT}/stdlib
RUNTIME=${MIRAGE_ROOT}/runtime

MODE=bu

if [ -z "${MIRAGE_ROOT}" ]; then
  MIRAGE_ROOT="$(${OCAMLOPT} -where)/mirage"
fi

if [ ! -z "$1" ]; then
  MODE="$1"
  shift
fi

if [ -z "$1" ]; then
  DIR="."
else
  DIR="$1"
fi

# no readlink -f on MacOS X, so use perl instead for that
if readlink -f . >/dev/null 2>&1; then
  DIR=`readlink -f ${DIR}`
else
  DIR=`perl -e "use Cwd 'abs_path'; print abs_path(\"$1\")"`
fi

function usage {
  echo "Usage: $0 [mode] [dir]"
  echo "  [mode] can be:"
  echo "    bu : target @OS@ (default)"
  echo "    bx : target Xen"
  echo "    clean : clean intermediates"
  exit 1
}

case "${MODE}" in
bu)
  echo Building for @OS@
  TARG=u
  ;;
bx)
  echo Building for Xen
  TARG=x
  ;;
clean|cl)
  echo Cleaning intermediate files
  cd "${DIR}"
  rm -f *.cmi *.cma *.cmo *.cmx *.annot *.o app .depend
  exit 0
  ;;
*)
  echo Unknown mode $*
  usage
  ;;
esac

cd "${DIR}"
DEPEND=".depend"
${OCAMLDSORT} -nox -mli *.ml *.mli > ${DEPEND}
env CAMLLIB="${STDLIB}" ${OCAMLOPT} ${OCAMLOPT_FLAGS} `cat .depend` -output-obj -o app.o

# now link app.o depending on the target platform
case "${TARG}" in
u)
  echo Linking for @OS@
  ${CC} -o app -lsqlite3 @OCAML_CLIBS@ app.o ${RUNTIME}/libmiragerun_@OS@.a
  ;;
x)
  echo Linking for Xen
  cd ${RUNTIME}/xen/stubdom && ${MAKE} caml-stubdom APP_LIBS="${DIR}/app.o ${RUNTIME}/libmiragerun_xen.a" debug=n
  cp ${RUNTIME}/xen/stubdom/mini-os-x86_64-caml/mini-os.gz ${DIR}/
  cp ${RUNTIME}/xen/stubdom/mini-os-x86_64-caml/mini-os ${DIR}/
  ;;
*)
  echo Unknown target $TARGET
  exit 1
  ;;
esac
